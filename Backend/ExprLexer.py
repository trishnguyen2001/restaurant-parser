# Generated from Expr.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,8,309,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
        2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,
        7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,
        2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,
        7,39,2,40,7,40,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,
        6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,
        1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,
        1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,
        1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,
        1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,
        1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,4,36,
        188,8,36,11,36,12,36,189,1,37,1,37,1,37,1,37,1,37,5,37,197,8,37,
        10,37,12,37,200,9,37,3,37,202,8,37,1,37,1,37,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,3,38,299,
        8,38,1,39,4,39,302,8,39,11,39,12,39,303,1,40,1,40,1,40,1,40,0,0,
        41,1,0,3,0,5,0,7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,0,25,0,27,
        0,29,0,31,0,33,0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,
        0,55,0,57,0,59,0,61,0,63,0,65,0,67,1,69,2,71,3,73,4,75,5,77,6,79,
        7,81,8,1,0,29,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,
        0,68,68,100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,
        103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,
        75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,
        2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,
        114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,
        0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,
        121,2,0,90,90,122,122,1,0,48,57,2,0,10,10,13,13,3,0,9,10,13,13,32,
        32,291,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
        1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,83,1,0,0,0,3,85,
        1,0,0,0,5,87,1,0,0,0,7,89,1,0,0,0,9,91,1,0,0,0,11,93,1,0,0,0,13,
        95,1,0,0,0,15,97,1,0,0,0,17,99,1,0,0,0,19,101,1,0,0,0,21,103,1,0,
        0,0,23,105,1,0,0,0,25,107,1,0,0,0,27,109,1,0,0,0,29,111,1,0,0,0,
        31,113,1,0,0,0,33,115,1,0,0,0,35,117,1,0,0,0,37,119,1,0,0,0,39,121,
        1,0,0,0,41,123,1,0,0,0,43,125,1,0,0,0,45,127,1,0,0,0,47,129,1,0,
        0,0,49,131,1,0,0,0,51,133,1,0,0,0,53,135,1,0,0,0,55,137,1,0,0,0,
        57,139,1,0,0,0,59,141,1,0,0,0,61,143,1,0,0,0,63,145,1,0,0,0,65,147,
        1,0,0,0,67,149,1,0,0,0,69,162,1,0,0,0,71,177,1,0,0,0,73,187,1,0,
        0,0,75,191,1,0,0,0,77,298,1,0,0,0,79,301,1,0,0,0,81,305,1,0,0,0,
        83,84,7,0,0,0,84,2,1,0,0,0,85,86,7,1,0,0,86,4,1,0,0,0,87,88,7,2,
        0,0,88,6,1,0,0,0,89,90,7,3,0,0,90,8,1,0,0,0,91,92,7,4,0,0,92,10,
        1,0,0,0,93,94,7,5,0,0,94,12,1,0,0,0,95,96,7,6,0,0,96,14,1,0,0,0,
        97,98,7,7,0,0,98,16,1,0,0,0,99,100,7,8,0,0,100,18,1,0,0,0,101,102,
        7,9,0,0,102,20,1,0,0,0,103,104,7,10,0,0,104,22,1,0,0,0,105,106,7,
        11,0,0,106,24,1,0,0,0,107,108,7,12,0,0,108,26,1,0,0,0,109,110,7,
        13,0,0,110,28,1,0,0,0,111,112,7,14,0,0,112,30,1,0,0,0,113,114,7,
        15,0,0,114,32,1,0,0,0,115,116,7,16,0,0,116,34,1,0,0,0,117,118,7,
        17,0,0,118,36,1,0,0,0,119,120,7,18,0,0,120,38,1,0,0,0,121,122,7,
        19,0,0,122,40,1,0,0,0,123,124,7,20,0,0,124,42,1,0,0,0,125,126,7,
        21,0,0,126,44,1,0,0,0,127,128,7,22,0,0,128,46,1,0,0,0,129,130,7,
        23,0,0,130,48,1,0,0,0,131,132,7,24,0,0,132,50,1,0,0,0,133,134,7,
        25,0,0,134,52,1,0,0,0,135,136,5,40,0,0,136,54,1,0,0,0,137,138,5,
        41,0,0,138,56,1,0,0,0,139,140,5,91,0,0,140,58,1,0,0,0,141,142,5,
        93,0,0,142,60,1,0,0,0,143,144,5,95,0,0,144,62,1,0,0,0,145,146,5,
        44,0,0,146,64,1,0,0,0,147,148,7,26,0,0,148,66,1,0,0,0,149,150,3,
        37,18,0,150,151,3,15,7,0,151,152,3,29,14,0,152,153,3,45,22,0,153,
        154,3,61,30,0,154,155,3,3,1,0,155,156,3,1,0,0,156,157,3,23,11,0,
        157,158,3,1,0,0,158,159,3,27,13,0,159,160,3,5,2,0,160,161,3,9,4,
        0,161,68,1,0,0,0,162,163,3,37,18,0,163,164,3,15,7,0,164,165,3,29,
        14,0,165,166,3,45,22,0,166,167,3,61,30,0,167,168,3,17,8,0,168,169,
        3,27,13,0,169,170,3,43,21,0,170,171,3,9,4,0,171,172,3,27,13,0,172,
        173,3,39,19,0,173,174,3,29,14,0,174,175,3,35,17,0,175,176,3,49,24,
        0,176,70,1,0,0,0,177,178,3,3,1,0,178,179,3,41,20,0,179,180,3,49,
        24,0,180,181,3,53,26,0,181,182,3,73,36,0,182,183,3,63,31,0,183,184,
        3,77,38,0,184,185,3,55,27,0,185,72,1,0,0,0,186,188,3,65,32,0,187,
        186,1,0,0,0,188,189,1,0,0,0,189,187,1,0,0,0,189,190,1,0,0,0,190,
        74,1,0,0,0,191,201,3,57,28,0,192,198,3,77,38,0,193,194,3,63,31,0,
        194,195,3,77,38,0,195,197,1,0,0,0,196,193,1,0,0,0,197,200,1,0,0,
        0,198,196,1,0,0,0,198,199,1,0,0,0,199,202,1,0,0,0,200,198,1,0,0,
        0,201,192,1,0,0,0,201,202,1,0,0,0,202,203,1,0,0,0,203,204,3,59,29,
        0,204,76,1,0,0,0,205,206,3,3,1,0,206,207,3,9,4,0,207,208,3,9,4,0,
        208,209,3,11,5,0,209,299,1,0,0,0,210,211,3,31,15,0,211,212,3,29,
        14,0,212,213,3,39,19,0,213,214,3,1,0,0,214,215,3,39,19,0,215,216,
        3,29,14,0,216,299,1,0,0,0,217,218,3,35,17,0,218,219,3,17,8,0,219,
        220,3,5,2,0,220,221,3,9,4,0,221,299,1,0,0,0,222,223,3,5,2,0,223,
        224,3,15,7,0,224,225,3,17,8,0,225,226,3,5,2,0,226,227,3,21,10,0,
        227,228,3,9,4,0,228,229,3,27,13,0,229,299,1,0,0,0,230,231,3,1,0,
        0,231,232,3,37,18,0,232,233,3,31,15,0,233,234,3,1,0,0,234,235,3,
        35,17,0,235,236,3,1,0,0,236,237,3,13,6,0,237,238,3,41,20,0,238,239,
        3,37,18,0,239,299,1,0,0,0,240,241,3,23,11,0,241,242,3,9,4,0,242,
        243,3,39,19,0,243,244,3,39,19,0,244,245,3,41,20,0,245,246,3,5,2,
        0,246,247,3,9,4,0,247,299,1,0,0,0,248,249,3,39,19,0,249,250,3,29,
        14,0,250,251,3,25,12,0,251,252,3,1,0,0,252,253,3,39,19,0,253,254,
        3,29,14,0,254,299,1,0,0,0,255,256,3,5,2,0,256,257,3,41,20,0,257,
        258,3,5,2,0,258,259,3,41,20,0,259,260,3,25,12,0,260,261,3,3,1,0,
        261,262,3,9,4,0,262,263,3,35,17,0,263,299,1,0,0,0,264,265,3,3,1,
        0,265,266,3,35,17,0,266,267,3,29,14,0,267,268,3,5,2,0,268,269,3,
        5,2,0,269,270,3,29,14,0,270,271,3,23,11,0,271,272,3,17,8,0,272,299,
        1,0,0,0,273,274,3,37,18,0,274,275,3,1,0,0,275,276,3,23,11,0,276,
        277,3,25,12,0,277,278,3,29,14,0,278,279,3,27,13,0,279,299,1,0,0,
        0,280,281,3,31,15,0,281,282,3,1,0,0,282,283,3,37,18,0,283,284,3,
        39,19,0,284,285,3,1,0,0,285,299,1,0,0,0,286,287,3,37,18,0,287,288,
        3,41,20,0,288,289,3,13,6,0,289,290,3,1,0,0,290,291,3,35,17,0,291,
        299,1,0,0,0,292,293,3,11,5,0,293,294,3,23,11,0,294,295,3,29,14,0,
        295,296,3,41,20,0,296,297,3,35,17,0,297,299,1,0,0,0,298,205,1,0,
        0,0,298,210,1,0,0,0,298,217,1,0,0,0,298,222,1,0,0,0,298,230,1,0,
        0,0,298,240,1,0,0,0,298,248,1,0,0,0,298,255,1,0,0,0,298,264,1,0,
        0,0,298,273,1,0,0,0,298,280,1,0,0,0,298,286,1,0,0,0,298,292,1,0,
        0,0,299,78,1,0,0,0,300,302,7,27,0,0,301,300,1,0,0,0,302,303,1,0,
        0,0,303,301,1,0,0,0,303,304,1,0,0,0,304,80,1,0,0,0,305,306,7,28,
        0,0,306,307,1,0,0,0,307,308,6,40,0,0,308,82,1,0,0,0,6,0,189,198,
        201,298,303,1,0,1,0
    ]

class ExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    OP_SHOWBALANCE = 1
    OP_SHOWINVENTORY = 2
    OP_BUY = 3
    QUANTITY = 4
    INGREDIENTLIST = 5
    INGREDIENT = 6
    NEWLINE = 7
    WS = 8

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
 ]

    symbolicNames = [ "<INVALID>",
            "OP_SHOWBALANCE", "OP_SHOWINVENTORY", "OP_BUY", "QUANTITY", 
            "INGREDIENTLIST", "INGREDIENT", "NEWLINE", "WS" ]

    ruleNames = [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                  "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", 
                  "W", "X", "Y", "Z", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACKET", 
                  "CLOSE_BRACKET", "UNDERSCORE", "COMMA", "DIGIT", "OP_SHOWBALANCE", 
                  "OP_SHOWINVENTORY", "OP_BUY", "QUANTITY", "INGREDIENTLIST", 
                  "INGREDIENT", "NEWLINE", "WS" ]

    grammarFileName = "Expr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


