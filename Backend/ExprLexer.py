# Generated from Expr.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,366,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,
        1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,
        1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,
        1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,
        1,31,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,
        1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,37,4,37,194,8,37,11,37,12,37,195,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,38,3,38,291,8,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,3,39,356,8,39,1,40,4,40,359,8,40,11,40,12,40,360,1,41,
        1,41,1,41,1,41,0,0,42,1,1,3,2,5,3,7,0,9,0,11,0,13,0,15,0,17,0,19,
        0,21,0,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,0,41,0,43,0,45,
        0,47,0,49,0,51,0,53,0,55,0,57,0,59,0,61,0,63,0,65,0,67,4,69,5,71,
        6,73,7,75,8,77,9,79,10,81,11,83,12,1,0,29,2,0,65,65,97,97,2,0,66,
        66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,
        70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,
        105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,
        77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,
        2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,
        116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,
        0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,122,1,0,48,57,2,
        0,10,10,13,13,3,0,9,10,13,13,32,32,354,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,
        75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,1,
        85,1,0,0,0,3,87,1,0,0,0,5,89,1,0,0,0,7,91,1,0,0,0,9,93,1,0,0,0,11,
        95,1,0,0,0,13,97,1,0,0,0,15,99,1,0,0,0,17,101,1,0,0,0,19,103,1,0,
        0,0,21,105,1,0,0,0,23,107,1,0,0,0,25,109,1,0,0,0,27,111,1,0,0,0,
        29,113,1,0,0,0,31,115,1,0,0,0,33,117,1,0,0,0,35,119,1,0,0,0,37,121,
        1,0,0,0,39,123,1,0,0,0,41,125,1,0,0,0,43,127,1,0,0,0,45,129,1,0,
        0,0,47,131,1,0,0,0,49,133,1,0,0,0,51,135,1,0,0,0,53,137,1,0,0,0,
        55,139,1,0,0,0,57,141,1,0,0,0,59,143,1,0,0,0,61,145,1,0,0,0,63,147,
        1,0,0,0,65,149,1,0,0,0,67,151,1,0,0,0,69,164,1,0,0,0,71,179,1,0,
        0,0,73,183,1,0,0,0,75,193,1,0,0,0,77,290,1,0,0,0,79,355,1,0,0,0,
        81,358,1,0,0,0,83,362,1,0,0,0,85,86,5,40,0,0,86,2,1,0,0,0,87,88,
        5,44,0,0,88,4,1,0,0,0,89,90,5,41,0,0,90,6,1,0,0,0,91,92,7,0,0,0,
        92,8,1,0,0,0,93,94,7,1,0,0,94,10,1,0,0,0,95,96,7,2,0,0,96,12,1,0,
        0,0,97,98,7,3,0,0,98,14,1,0,0,0,99,100,7,4,0,0,100,16,1,0,0,0,101,
        102,7,5,0,0,102,18,1,0,0,0,103,104,7,6,0,0,104,20,1,0,0,0,105,106,
        7,7,0,0,106,22,1,0,0,0,107,108,7,8,0,0,108,24,1,0,0,0,109,110,7,
        9,0,0,110,26,1,0,0,0,111,112,7,10,0,0,112,28,1,0,0,0,113,114,7,11,
        0,0,114,30,1,0,0,0,115,116,7,12,0,0,116,32,1,0,0,0,117,118,7,13,
        0,0,118,34,1,0,0,0,119,120,7,14,0,0,120,36,1,0,0,0,121,122,7,15,
        0,0,122,38,1,0,0,0,123,124,7,16,0,0,124,40,1,0,0,0,125,126,7,17,
        0,0,126,42,1,0,0,0,127,128,7,18,0,0,128,44,1,0,0,0,129,130,7,19,
        0,0,130,46,1,0,0,0,131,132,7,20,0,0,132,48,1,0,0,0,133,134,7,21,
        0,0,134,50,1,0,0,0,135,136,7,22,0,0,136,52,1,0,0,0,137,138,7,23,
        0,0,138,54,1,0,0,0,139,140,7,24,0,0,140,56,1,0,0,0,141,142,7,25,
        0,0,142,58,1,0,0,0,143,144,5,91,0,0,144,60,1,0,0,0,145,146,5,93,
        0,0,146,62,1,0,0,0,147,148,5,95,0,0,148,64,1,0,0,0,149,150,7,26,
        0,0,150,66,1,0,0,0,151,152,3,43,21,0,152,153,3,21,10,0,153,154,3,
        35,17,0,154,155,3,51,25,0,155,156,3,63,31,0,156,157,3,9,4,0,157,
        158,3,7,3,0,158,159,3,29,14,0,159,160,3,7,3,0,160,161,3,33,16,0,
        161,162,3,11,5,0,162,163,3,15,7,0,163,68,1,0,0,0,164,165,3,43,21,
        0,165,166,3,21,10,0,166,167,3,35,17,0,167,168,3,51,25,0,168,169,
        3,63,31,0,169,170,3,23,11,0,170,171,3,33,16,0,171,172,3,49,24,0,
        172,173,3,15,7,0,173,174,3,33,16,0,174,175,3,45,22,0,175,176,3,35,
        17,0,176,177,3,41,20,0,177,178,3,55,27,0,178,70,1,0,0,0,179,180,
        3,9,4,0,180,181,3,47,23,0,181,182,3,55,27,0,182,72,1,0,0,0,183,184,
        3,33,16,0,184,185,3,15,7,0,185,186,3,51,25,0,186,187,3,63,31,0,187,
        188,3,13,6,0,188,189,3,23,11,0,189,190,3,43,21,0,190,191,3,21,10,
        0,191,74,1,0,0,0,192,194,3,65,32,0,193,192,1,0,0,0,194,195,1,0,0,
        0,195,193,1,0,0,0,195,196,1,0,0,0,196,76,1,0,0,0,197,198,3,9,4,0,
        198,199,3,15,7,0,199,200,3,15,7,0,200,201,3,17,8,0,201,291,1,0,0,
        0,202,203,3,37,18,0,203,204,3,35,17,0,204,205,3,45,22,0,205,206,
        3,7,3,0,206,207,3,45,22,0,207,208,3,35,17,0,208,291,1,0,0,0,209,
        210,3,41,20,0,210,211,3,23,11,0,211,212,3,11,5,0,212,213,3,15,7,
        0,213,291,1,0,0,0,214,215,3,11,5,0,215,216,3,21,10,0,216,217,3,23,
        11,0,217,218,3,11,5,0,218,219,3,27,13,0,219,220,3,15,7,0,220,221,
        3,33,16,0,221,291,1,0,0,0,222,223,3,7,3,0,223,224,3,43,21,0,224,
        225,3,37,18,0,225,226,3,7,3,0,226,227,3,41,20,0,227,228,3,7,3,0,
        228,229,3,19,9,0,229,230,3,47,23,0,230,231,3,43,21,0,231,291,1,0,
        0,0,232,233,3,29,14,0,233,234,3,15,7,0,234,235,3,45,22,0,235,236,
        3,45,22,0,236,237,3,47,23,0,237,238,3,11,5,0,238,239,3,15,7,0,239,
        291,1,0,0,0,240,241,3,45,22,0,241,242,3,35,17,0,242,243,3,31,15,
        0,243,244,3,7,3,0,244,245,3,45,22,0,245,246,3,35,17,0,246,291,1,
        0,0,0,247,248,3,11,5,0,248,249,3,47,23,0,249,250,3,11,5,0,250,251,
        3,47,23,0,251,252,3,31,15,0,252,253,3,9,4,0,253,254,3,15,7,0,254,
        255,3,41,20,0,255,291,1,0,0,0,256,257,3,9,4,0,257,258,3,41,20,0,
        258,259,3,35,17,0,259,260,3,11,5,0,260,261,3,11,5,0,261,262,3,35,
        17,0,262,263,3,29,14,0,263,264,3,23,11,0,264,291,1,0,0,0,265,266,
        3,43,21,0,266,267,3,7,3,0,267,268,3,29,14,0,268,269,3,31,15,0,269,
        270,3,35,17,0,270,271,3,33,16,0,271,291,1,0,0,0,272,273,3,37,18,
        0,273,274,3,7,3,0,274,275,3,43,21,0,275,276,3,45,22,0,276,277,3,
        7,3,0,277,291,1,0,0,0,278,279,3,43,21,0,279,280,3,47,23,0,280,281,
        3,19,9,0,281,282,3,7,3,0,282,283,3,41,20,0,283,291,1,0,0,0,284,285,
        3,17,8,0,285,286,3,29,14,0,286,287,3,35,17,0,287,288,3,47,23,0,288,
        289,3,41,20,0,289,291,1,0,0,0,290,197,1,0,0,0,290,202,1,0,0,0,290,
        209,1,0,0,0,290,214,1,0,0,0,290,222,1,0,0,0,290,232,1,0,0,0,290,
        240,1,0,0,0,290,247,1,0,0,0,290,256,1,0,0,0,290,265,1,0,0,0,290,
        272,1,0,0,0,290,278,1,0,0,0,290,284,1,0,0,0,291,78,1,0,0,0,292,293,
        3,45,22,0,293,294,3,41,20,0,294,295,3,23,11,0,295,296,3,43,21,0,
        296,297,3,21,10,0,297,298,3,11,5,0,298,299,3,21,10,0,299,300,3,23,
        11,0,300,301,3,11,5,0,301,302,3,27,13,0,302,303,3,15,7,0,303,304,
        3,33,16,0,304,356,1,0,0,0,305,306,3,43,21,0,306,307,3,37,18,0,307,
        308,3,7,3,0,308,309,3,19,9,0,309,310,3,21,10,0,310,311,3,15,7,0,
        311,312,3,45,22,0,312,313,3,45,22,0,313,314,3,23,11,0,314,356,1,
        0,0,0,315,316,3,41,20,0,316,317,3,7,3,0,317,318,3,49,24,0,318,319,
        3,23,11,0,319,320,3,35,17,0,320,321,3,29,14,0,321,322,3,23,11,0,
        322,356,1,0,0,0,323,324,3,45,22,0,324,325,3,15,7,0,325,326,3,15,
        7,0,326,327,3,43,21,0,327,328,3,7,3,0,328,329,3,29,14,0,329,330,
        3,31,15,0,330,331,3,35,17,0,331,332,3,33,16,0,332,356,1,0,0,0,333,
        334,3,45,22,0,334,335,3,33,16,0,335,336,3,45,22,0,336,337,3,9,4,
        0,337,338,3,47,23,0,338,339,3,41,20,0,339,340,3,19,9,0,340,341,3,
        15,7,0,341,342,3,41,20,0,342,356,1,0,0,0,343,344,3,43,21,0,344,345,
        3,27,13,0,345,346,3,23,11,0,346,347,3,33,16,0,347,348,3,33,16,0,
        348,349,3,55,27,0,349,350,3,43,21,0,350,351,3,7,3,0,351,352,3,29,
        14,0,352,353,3,7,3,0,353,354,3,13,6,0,354,356,1,0,0,0,355,292,1,
        0,0,0,355,305,1,0,0,0,355,315,1,0,0,0,355,323,1,0,0,0,355,333,1,
        0,0,0,355,343,1,0,0,0,356,80,1,0,0,0,357,359,7,27,0,0,358,357,1,
        0,0,0,359,360,1,0,0,0,360,358,1,0,0,0,360,361,1,0,0,0,361,82,1,0,
        0,0,362,363,7,28,0,0,363,364,1,0,0,0,364,365,6,41,0,0,365,84,1,0,
        0,0,5,0,195,290,355,360,1,0,1,0
    ]

class ExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    OP_SHOWBALANCE = 4
    OP_SHOWINVENTORY = 5
    OP_BUY = 6
    OP_NEWDISH = 7
    NUMBER = 8
    INGREDIENT = 9
    DISHNAME = 10
    NEWLINE = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'" ]

    symbolicNames = [ "<INVALID>",
            "OP_SHOWBALANCE", "OP_SHOWINVENTORY", "OP_BUY", "OP_NEWDISH", 
            "NUMBER", "INGREDIENT", "DISHNAME", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "A", "B", "C", "D", "E", "F", 
                  "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", 
                  "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "OPEN_BRACKET", 
                  "CLOSE_BRACKET", "UNDERSCORE", "DIGIT", "OP_SHOWBALANCE", 
                  "OP_SHOWINVENTORY", "OP_BUY", "OP_NEWDISH", "NUMBER", 
                  "INGREDIENT", "DISHNAME", "NEWLINE", "WS" ]

    grammarFileName = "Expr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


