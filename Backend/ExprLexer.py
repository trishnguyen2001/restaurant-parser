# Generated from Expr.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,413,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,
        7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
        14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,
        21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,
        27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,
        34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,
        35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
        36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,
        39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,4,40,211,8,40,11,
        40,12,40,212,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,41,1,41,3,41,308,8,41,1,42,1,42,1,42,1,42,1,42,1,
        42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
        42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
        42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
        42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
        42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
        42,3,42,381,8,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,
        43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,3,43,403,8,
        43,1,44,4,44,406,8,44,11,44,12,44,407,1,45,1,45,1,45,1,45,0,0,46,
        1,1,3,2,5,3,7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,0,25,0,27,0,
        29,0,31,0,33,0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,
        55,0,57,0,59,0,61,0,63,0,65,0,67,0,69,0,71,4,73,5,75,6,77,7,79,8,
        81,9,83,10,85,11,87,12,89,13,91,14,1,0,29,2,0,65,65,97,97,2,0,66,
        66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,
        70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,
        105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,
        77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,
        2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,
        116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,
        0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,122,1,0,48,57,2,
        0,10,10,13,13,3,0,9,10,13,13,32,32,402,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,
        79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,
        89,1,0,0,0,0,91,1,0,0,0,1,93,1,0,0,0,3,95,1,0,0,0,5,97,1,0,0,0,7,
        99,1,0,0,0,9,101,1,0,0,0,11,103,1,0,0,0,13,105,1,0,0,0,15,107,1,
        0,0,0,17,109,1,0,0,0,19,111,1,0,0,0,21,113,1,0,0,0,23,115,1,0,0,
        0,25,117,1,0,0,0,27,119,1,0,0,0,29,121,1,0,0,0,31,123,1,0,0,0,33,
        125,1,0,0,0,35,127,1,0,0,0,37,129,1,0,0,0,39,131,1,0,0,0,41,133,
        1,0,0,0,43,135,1,0,0,0,45,137,1,0,0,0,47,139,1,0,0,0,49,141,1,0,
        0,0,51,143,1,0,0,0,53,145,1,0,0,0,55,147,1,0,0,0,57,149,1,0,0,0,
        59,151,1,0,0,0,61,153,1,0,0,0,63,155,1,0,0,0,65,157,1,0,0,0,67,159,
        1,0,0,0,69,161,1,0,0,0,71,163,1,0,0,0,73,176,1,0,0,0,75,191,1,0,
        0,0,77,195,1,0,0,0,79,200,1,0,0,0,81,210,1,0,0,0,83,307,1,0,0,0,
        85,380,1,0,0,0,87,402,1,0,0,0,89,405,1,0,0,0,91,409,1,0,0,0,93,94,
        5,40,0,0,94,2,1,0,0,0,95,96,5,44,0,0,96,4,1,0,0,0,97,98,5,41,0,0,
        98,6,1,0,0,0,99,100,7,0,0,0,100,8,1,0,0,0,101,102,7,1,0,0,102,10,
        1,0,0,0,103,104,7,2,0,0,104,12,1,0,0,0,105,106,7,3,0,0,106,14,1,
        0,0,0,107,108,7,4,0,0,108,16,1,0,0,0,109,110,7,5,0,0,110,18,1,0,
        0,0,111,112,7,6,0,0,112,20,1,0,0,0,113,114,7,7,0,0,114,22,1,0,0,
        0,115,116,7,8,0,0,116,24,1,0,0,0,117,118,7,9,0,0,118,26,1,0,0,0,
        119,120,7,10,0,0,120,28,1,0,0,0,121,122,7,11,0,0,122,30,1,0,0,0,
        123,124,7,12,0,0,124,32,1,0,0,0,125,126,7,13,0,0,126,34,1,0,0,0,
        127,128,7,14,0,0,128,36,1,0,0,0,129,130,7,15,0,0,130,38,1,0,0,0,
        131,132,7,16,0,0,132,40,1,0,0,0,133,134,7,17,0,0,134,42,1,0,0,0,
        135,136,7,18,0,0,136,44,1,0,0,0,137,138,7,19,0,0,138,46,1,0,0,0,
        139,140,7,20,0,0,140,48,1,0,0,0,141,142,7,21,0,0,142,50,1,0,0,0,
        143,144,7,22,0,0,144,52,1,0,0,0,145,146,7,23,0,0,146,54,1,0,0,0,
        147,148,7,24,0,0,148,56,1,0,0,0,149,150,7,25,0,0,150,58,1,0,0,0,
        151,152,5,91,0,0,152,60,1,0,0,0,153,154,5,93,0,0,154,62,1,0,0,0,
        155,156,5,95,0,0,156,64,1,0,0,0,157,158,7,26,0,0,158,66,1,0,0,0,
        159,160,5,32,0,0,160,68,1,0,0,0,161,162,5,39,0,0,162,70,1,0,0,0,
        163,164,3,43,21,0,164,165,3,21,10,0,165,166,3,35,17,0,166,167,3,
        51,25,0,167,168,3,63,31,0,168,169,3,9,4,0,169,170,3,7,3,0,170,171,
        3,29,14,0,171,172,3,7,3,0,172,173,3,33,16,0,173,174,3,11,5,0,174,
        175,3,15,7,0,175,72,1,0,0,0,176,177,3,43,21,0,177,178,3,21,10,0,
        178,179,3,35,17,0,179,180,3,51,25,0,180,181,3,63,31,0,181,182,3,
        23,11,0,182,183,3,33,16,0,183,184,3,49,24,0,184,185,3,15,7,0,185,
        186,3,33,16,0,186,187,3,45,22,0,187,188,3,35,17,0,188,189,3,41,20,
        0,189,190,3,55,27,0,190,74,1,0,0,0,191,192,3,9,4,0,192,193,3,47,
        23,0,193,194,3,55,27,0,194,76,1,0,0,0,195,196,3,43,21,0,196,197,
        3,15,7,0,197,198,3,29,14,0,198,199,3,29,14,0,199,78,1,0,0,0,200,
        201,3,33,16,0,201,202,3,15,7,0,202,203,3,51,25,0,203,204,3,63,31,
        0,204,205,3,13,6,0,205,206,3,23,11,0,206,207,3,43,21,0,207,208,3,
        21,10,0,208,80,1,0,0,0,209,211,3,65,32,0,210,209,1,0,0,0,211,212,
        1,0,0,0,212,210,1,0,0,0,212,213,1,0,0,0,213,82,1,0,0,0,214,215,3,
        9,4,0,215,216,3,15,7,0,216,217,3,15,7,0,217,218,3,17,8,0,218,308,
        1,0,0,0,219,220,3,37,18,0,220,221,3,35,17,0,221,222,3,45,22,0,222,
        223,3,7,3,0,223,224,3,45,22,0,224,225,3,35,17,0,225,308,1,0,0,0,
        226,227,3,41,20,0,227,228,3,23,11,0,228,229,3,11,5,0,229,230,3,15,
        7,0,230,308,1,0,0,0,231,232,3,11,5,0,232,233,3,21,10,0,233,234,3,
        23,11,0,234,235,3,11,5,0,235,236,3,27,13,0,236,237,3,15,7,0,237,
        238,3,33,16,0,238,308,1,0,0,0,239,240,3,7,3,0,240,241,3,43,21,0,
        241,242,3,37,18,0,242,243,3,7,3,0,243,244,3,41,20,0,244,245,3,7,
        3,0,245,246,3,19,9,0,246,247,3,47,23,0,247,248,3,43,21,0,248,308,
        1,0,0,0,249,250,3,29,14,0,250,251,3,15,7,0,251,252,3,45,22,0,252,
        253,3,45,22,0,253,254,3,47,23,0,254,255,3,11,5,0,255,256,3,15,7,
        0,256,308,1,0,0,0,257,258,3,45,22,0,258,259,3,35,17,0,259,260,3,
        31,15,0,260,261,3,7,3,0,261,262,3,45,22,0,262,263,3,35,17,0,263,
        308,1,0,0,0,264,265,3,11,5,0,265,266,3,47,23,0,266,267,3,11,5,0,
        267,268,3,47,23,0,268,269,3,31,15,0,269,270,3,9,4,0,270,271,3,15,
        7,0,271,272,3,41,20,0,272,308,1,0,0,0,273,274,3,9,4,0,274,275,3,
        41,20,0,275,276,3,35,17,0,276,277,3,11,5,0,277,278,3,11,5,0,278,
        279,3,35,17,0,279,280,3,29,14,0,280,281,3,23,11,0,281,308,1,0,0,
        0,282,283,3,43,21,0,283,284,3,7,3,0,284,285,3,29,14,0,285,286,3,
        31,15,0,286,287,3,35,17,0,287,288,3,33,16,0,288,308,1,0,0,0,289,
        290,3,37,18,0,290,291,3,7,3,0,291,292,3,43,21,0,292,293,3,45,22,
        0,293,294,3,7,3,0,294,308,1,0,0,0,295,296,3,43,21,0,296,297,3,47,
        23,0,297,298,3,19,9,0,298,299,3,7,3,0,299,300,3,41,20,0,300,308,
        1,0,0,0,301,302,3,17,8,0,302,303,3,29,14,0,303,304,3,35,17,0,304,
        305,3,47,23,0,305,306,3,41,20,0,306,308,1,0,0,0,307,214,1,0,0,0,
        307,219,1,0,0,0,307,226,1,0,0,0,307,231,1,0,0,0,307,239,1,0,0,0,
        307,249,1,0,0,0,307,257,1,0,0,0,307,264,1,0,0,0,307,273,1,0,0,0,
        307,282,1,0,0,0,307,289,1,0,0,0,307,295,1,0,0,0,307,301,1,0,0,0,
        308,84,1,0,0,0,309,310,3,45,22,0,310,311,3,41,20,0,311,312,3,23,
        11,0,312,313,3,43,21,0,313,314,3,21,10,0,314,315,3,69,34,0,315,316,
        3,43,21,0,316,317,3,67,33,0,317,318,3,11,5,0,318,319,3,21,10,0,319,
        320,3,23,11,0,320,321,3,11,5,0,321,322,3,27,13,0,322,323,3,15,7,
        0,323,324,3,33,16,0,324,381,1,0,0,0,325,326,3,43,21,0,326,327,3,
        37,18,0,327,328,3,7,3,0,328,329,3,19,9,0,329,330,3,21,10,0,330,331,
        3,15,7,0,331,332,3,45,22,0,332,333,3,45,22,0,333,334,3,23,11,0,334,
        381,1,0,0,0,335,336,3,41,20,0,336,337,3,7,3,0,337,338,3,49,24,0,
        338,339,3,23,11,0,339,340,3,35,17,0,340,341,3,29,14,0,341,342,3,
        23,11,0,342,381,1,0,0,0,343,344,3,45,22,0,344,345,3,15,7,0,345,346,
        3,15,7,0,346,347,3,69,34,0,347,348,3,43,21,0,348,349,3,67,33,0,349,
        350,3,43,21,0,350,351,3,7,3,0,351,352,3,29,14,0,352,353,3,31,15,
        0,353,354,3,35,17,0,354,355,3,33,16,0,355,381,1,0,0,0,356,357,3,
        45,22,0,357,358,3,33,16,0,358,359,3,45,22,0,359,360,3,67,33,0,360,
        361,3,9,4,0,361,362,3,47,23,0,362,363,3,41,20,0,363,364,3,19,9,0,
        364,365,3,15,7,0,365,366,3,41,20,0,366,381,1,0,0,0,367,368,3,43,
        21,0,368,369,3,27,13,0,369,370,3,23,11,0,370,371,3,33,16,0,371,372,
        3,33,16,0,372,373,3,55,27,0,373,374,3,67,33,0,374,375,3,43,21,0,
        375,376,3,7,3,0,376,377,3,29,14,0,377,378,3,7,3,0,378,379,3,13,6,
        0,379,381,1,0,0,0,380,309,1,0,0,0,380,325,1,0,0,0,380,335,1,0,0,
        0,380,343,1,0,0,0,380,356,1,0,0,0,380,367,1,0,0,0,381,86,1,0,0,0,
        382,383,3,43,21,0,383,384,3,15,7,0,384,385,3,7,3,0,385,386,3,41,
        20,0,386,403,1,0,0,0,387,388,3,9,4,0,388,389,3,7,3,0,389,390,3,27,
        13,0,390,391,3,15,7,0,391,403,1,0,0,0,392,393,3,9,4,0,393,394,3,
        35,17,0,394,395,3,23,11,0,395,396,3,29,14,0,396,403,1,0,0,0,397,
        398,3,33,16,0,398,399,3,35,17,0,399,400,3,33,16,0,400,401,3,15,7,
        0,401,403,1,0,0,0,402,382,1,0,0,0,402,387,1,0,0,0,402,392,1,0,0,
        0,402,397,1,0,0,0,403,88,1,0,0,0,404,406,7,27,0,0,405,404,1,0,0,
        0,406,407,1,0,0,0,407,405,1,0,0,0,407,408,1,0,0,0,408,90,1,0,0,0,
        409,410,7,28,0,0,410,411,1,0,0,0,411,412,6,45,0,0,412,92,1,0,0,0,
        6,0,212,307,380,402,407,1,0,1,0
    ]

class ExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    OP_SHOWBALANCE = 4
    OP_SHOWINVENTORY = 5
    OP_BUY = 6
    OP_SELL = 7
    OP_NEWDISH = 8
    NUMBER = 9
    INGREDIENT = 10
    DISHNAME = 11
    COOKING_METHOD = 12
    NEWLINE = 13
    WS = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'" ]

    symbolicNames = [ "<INVALID>",
            "OP_SHOWBALANCE", "OP_SHOWINVENTORY", "OP_BUY", "OP_SELL", "OP_NEWDISH", 
            "NUMBER", "INGREDIENT", "DISHNAME", "COOKING_METHOD", "NEWLINE", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "A", "B", "C", "D", "E", "F", 
                  "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", 
                  "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "OPEN_BRACKET", 
                  "CLOSE_BRACKET", "UNDERSCORE", "DIGIT", "SPACE", "APOSTROPHE", 
                  "OP_SHOWBALANCE", "OP_SHOWINVENTORY", "OP_BUY", "OP_SELL", 
                  "OP_NEWDISH", "NUMBER", "INGREDIENT", "DISHNAME", "COOKING_METHOD", 
                  "NEWLINE", "WS" ]

    grammarFileName = "Expr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


