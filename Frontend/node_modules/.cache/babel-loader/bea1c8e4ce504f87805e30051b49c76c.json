{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trish Nguyen\\\\documents\\\\github\\\\restaurant-parser\\\\frontend\\\\src\\\\routes\\\\AccountMod.jsx\";\nimport { SERVER_URL } from \"api\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Ellipsis } from \"react-spinners-css\";\nimport styled from \"styled-components\";\nconst Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  width: 70%;\n  margin-top: 36px;\n  height: 100vh;\n  padding: 20px;\n`;\nconst ListingTitle = styled.div`\n  font-size: 35px;\n  font-weight: 700;\n`;\nconst SectionTitle = styled.div`\n  margin-top: 20px;\n  font-size: 26px;\n  font-weight: 500;\n`;\nconst SubTitle = styled.div`\n  margin-top: 17px;\n  font-size: 22px;\n  font-weight: 300;\n`;\nconst Input = styled.input`\n  margin-top: 15px;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #b0b0b0;\n  border-radius: 20px;\n  height: 50px;\n  color: black;\n  font-size: 18px;\n  font-weight: 450;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 50px;\n  width: 500px;\n  height: 60px;\n  padding: 15px;\n  border-radius: 20px;\n  background-color: #cf316a;\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 700;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #ff457b;\n  }\n`;\nconst CenteredButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\nconst LeftBox = styled.div`\n  margin-top: 40px;\n  margin-left: 50px;\n  display: flex;\n  justify-content: flex-start; /* Align items to the left */\n  align-items: center; /* Center vertically */\n  margin-bottom: 20px; /* Add some spacing from the form */\n`;\nconst Button = styled.button`\n  background-color: transparent;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n`;\nconst ErrorText = styled.div`\n  color: #cf316a;\n  font-size: 14px;\n  margin-top: 5px;\n`;\nfunction AccountMod() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isFetching, setIsFetching] = useState(false);\n  const [serverError, setServerError] = useState({\n    status: 0,\n    message: \"\"\n  });\n  const {\n    handleSubmit,\n    register,\n    setError,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const userinfo = localStorage.userinfo ? JSON.parse(localStorage.userinfo) : {};\n  const validateLettersWithSpaces = value => {\n    if (/^[a-zA-Z\\s]*[a-zA-Z][a-zA-Z\\s]*$/.test(value)) {\n      return true;\n    }\n    return \"Only letters and spaces are allowed\";\n  };\n  const isLetter = str => {\n    return /^[a-zA-Z\\s]*$/.test(str);\n  };\n  const isValidPhoneNumber = value => {\n    if (/^\\+\\d{11}$/.test(value)) {\n      return true;\n    }\n    return \"Phone number must start with '+' and have 11 digits\";\n  };\n  const onSubmit = async formData => {\n    console.log(formData);\n    setIsFetching(true);\n\n    // Request\n    const response = await fetch(`${SERVER_URL}/user?uid=${localStorage.uid}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n\n    // Data\n    const data = await response.json();\n    console.log(response.status, data);\n    setServerError({\n      status: response.status,\n      message: data.message\n    });\n    // 200\n    if (response.ok) {\n      localStorage.userinfo = JSON.stringify(data);\n      navigate(location.pathname.replace(\"/modify\", \"\"));\n    } else {\n      console.log(\"Fail\");\n    }\n    setIsFetching(false);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LeftBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => navigate(-1),\n    id: \"back-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListingTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Update Profile\"), userinfo.accountType === \"hotel\" &&\n  /*#__PURE__*/\n  //renders only if the account is a hotel owner\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Hotel Details\"), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Hotel Name\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"hotelName\", {\n    required: \"Hotel Name is required\",\n    validate: value => {\n      if (value.trim() === \"\") {\n        return \"Hotel Name cannot be just spaces\";\n      }\n      return true;\n    }\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.hotelName,\n    id: \"hotel-name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  })), errors.hotelName && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, errors.hotelName.message.toString())), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Street Name\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"street\", {\n    required: \"Street Name is required\",\n    validate: value => {\n      if (value.trim() === \"\") {\n        return \"Street Name cannot be just spaces\";\n      }\n      return true;\n    }\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.street,\n    id: \"street-name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  })), errors.street && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, errors.street.message.toString())), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"city\", {\n    required: \"City is required\",\n    validate: validateLettersWithSpaces\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.city,\n    id: \"city-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  })), errors.city && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, errors.city.message.toString()))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"zipcode\", {\n    valueAsNumber: true,\n    required: \"Zip Code is required\"\n  }), {\n    type: \"number\",\n    defaultValue: userinfo.zipcode,\n    id: \"zip-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  })), errors.zipcode && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  }, errors.zipcode.message.toString())))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"state\", {\n    required: \"State is required\",\n    validate: {\n      validName: value => {\n        if (!isLetter(value)) {\n          return \"Only letters are allowed\";\n        }\n        return true;\n      }\n    }\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.state,\n    id: \"state-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  })), errors.state && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }, errors.state.message.toString()))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 19\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"country\", {\n    required: \"Country is required\",\n    validate: {\n      validName: value => {\n        if (!isLetter(value)) {\n          return \"Only letters are allowed\";\n        }\n        return true;\n      }\n    }\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.country,\n    id: \"country-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  })), errors.country && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }, errors.country.message.toString()))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, \"Profile Details\"), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"email\", {\n    required: \"Email is required\",\n    pattern: {\n      value: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n      message: \"Invalid email format\"\n    }\n  }), {\n    type: \"text\",\n    style: {\n      color: \"black\"\n    }\n    //onBlur={(e) => validateEmail(e.target.value)}\n    ,\n    defaultValue: userinfo.email,\n    id: \"email-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  })), errors.email && /*#__PURE__*/React.createElement(ErrorText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, errors.email.message.toString()), serverError.status === 409 && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, serverError.message)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"firstName\", {\n    required: \"First Name is required\",\n    validate: {\n      validName: value => {\n        if (!isLetter(value)) {\n          return \"Only letters are allowed\";\n        }\n        return true;\n      }\n    }\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.firstName,\n    id: \"fname-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  })), errors.firstName && /*#__PURE__*/React.createElement(ErrorText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, errors.firstName.message.toString())), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"lastName\", {\n    required: \"Last Name is required\",\n    validate: {\n      validName: value => {\n        if (!isLetter(value)) {\n          return \"Only letters are allowed\";\n        }\n        return true;\n      }\n    }\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.lastName,\n    id: \"lname-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 15\n    }\n  })), errors.lastName && /*#__PURE__*/React.createElement(ErrorText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }\n  }, errors.lastName.message.toString()))), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"password\", {}), {\n    type: \"password\",\n    id: \"passw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"phoneNumber\", {\n    required: \"Phone Number is required\",\n    validate: isValidPhoneNumber\n  }), {\n    type: \"text\",\n    defaultValue: userinfo.phone,\n    id: \"phone-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  })), errors.phoneNumber && /*#__PURE__*/React.createElement(ErrorText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, errors.phoneNumber.message.toString()), serverError.status === 418 && /*#__PURE__*/React.createElement(ErrorText, {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, serverError.message)), /*#__PURE__*/React.createElement(CenteredButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SubmitButton, {\n    type: \"submit\",\n    id: \"update-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, isFetching ? /*#__PURE__*/React.createElement(Ellipsis, {\n    color: \"white\",\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 29\n    }\n  }) : \"Update\")))));\n}\nexport default AccountMod;","map":{"version":3,"names":["SERVER_URL","React","useState","useForm","useLocation","useNavigate","Ellipsis","styled","Container","main","ListingTitle","div","SectionTitle","SubTitle","Input","input","SubmitButton","button","CenteredButtonContainer","LeftBox","Button","ErrorText","AccountMod","location","navigate","isFetching","setIsFetching","serverError","setServerError","status","message","handleSubmit","register","setError","formState","errors","userinfo","localStorage","JSON","parse","validateLettersWithSpaces","value","test","isLetter","str","isValidPhoneNumber","onSubmit","formData","console","log","response","fetch","uid","method","headers","body","stringify","data","json","ok","pathname","replace","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","accountType","Object","assign","required","validate","trim","type","defaultValue","hotelName","className","toString","street","style","display","flex","marginRight","city","valueAsNumber","zipcode","validName","state","country","pattern","color","email","firstName","lastName","phone","phoneNumber","size"],"sources":["C:/Users/Trish Nguyen/documents/github/restaurant-parser/frontend/src/routes/AccountMod.jsx"],"sourcesContent":["import { SERVER_URL } from \"api\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Ellipsis } from \"react-spinners-css\";\nimport styled from \"styled-components\";\n\nconst Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  width: 70%;\n  margin-top: 36px;\n  height: 100vh;\n  padding: 20px;\n`;\n\nconst ListingTitle = styled.div`\n  font-size: 35px;\n  font-weight: 700;\n`;\n\nconst SectionTitle = styled.div`\n  margin-top: 20px;\n  font-size: 26px;\n  font-weight: 500;\n`;\n\nconst SubTitle = styled.div`\n  margin-top: 17px;\n  font-size: 22px;\n  font-weight: 300;\n`;\n\nconst Input = styled.input`\n  margin-top: 15px;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #b0b0b0;\n  border-radius: 20px;\n  height: 50px;\n  color: black;\n  font-size: 18px;\n  font-weight: 450;\n`;\n\nconst SubmitButton = styled.button`\n  margin-top: 50px;\n  width: 500px;\n  height: 60px;\n  padding: 15px;\n  border-radius: 20px;\n  background-color: #cf316a;\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 700;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #ff457b;\n  }\n`;\n\nconst CenteredButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nconst LeftBox = styled.div`\n  margin-top: 40px;\n  margin-left: 50px;\n  display: flex;\n  justify-content: flex-start; /* Align items to the left */\n  align-items: center; /* Center vertically */\n  margin-bottom: 20px; /* Add some spacing from the form */\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst ErrorText = styled.div`\n  color: #cf316a;\n  font-size: 14px;\n  margin-top: 5px;\n`;\n\nfunction AccountMod() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isFetching, setIsFetching] = useState(false);\n  const [serverError, setServerError] = useState({ status: 0, message: \"\" });\n  const {\n    handleSubmit,\n    register,\n    setError,\n    formState: { errors },\n  } = useForm();\n\n  const userinfo = localStorage.userinfo\n    ? JSON.parse(localStorage.userinfo)\n    : {};\n\n  const validateLettersWithSpaces = (value) => {\n    if (/^[a-zA-Z\\s]*[a-zA-Z][a-zA-Z\\s]*$/.test(value)) {\n      return true;\n    }\n    return \"Only letters and spaces are allowed\";\n  };\n\n  const isLetter = (str) => {\n    return /^[a-zA-Z\\s]*$/.test(str);\n  };\n\n  const isValidPhoneNumber = (value) => {\n    if (/^\\+\\d{11}$/.test(value)) {\n      return true;\n    }\n    return \"Phone number must start with '+' and have 11 digits\";\n  };\n\n  const onSubmit = async (formData) => {\n    console.log(formData);\n    setIsFetching(true);\n\n    // Request\n    const response = await fetch(`${SERVER_URL}/user?uid=${localStorage.uid}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    });\n\n    // Data\n    const data = await response.json();\n    console.log(response.status, data);\n    setServerError({ status: response.status, message: data.message });\n    // 200\n    if (response.ok) {\n      localStorage.userinfo = JSON.stringify(data);\n      navigate(location.pathname.replace(\"/modify\", \"\"));\n    } else {\n      console.log(\"Fail\");\n    }\n\n    setIsFetching(false);\n  };\n\n  return (\n    <>\n      <LeftBox>\n        <Button onClick={() => navigate(-1)} id=\"back-btn\">\n          Back\n        </Button>\n      </LeftBox>\n      <Container>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <ListingTitle>Update Profile</ListingTitle>\n\n          {userinfo.accountType === \"hotel\" && ( //renders only if the account is a hotel owner\n            <div>\n              <SectionTitle>Hotel Details</SectionTitle>\n              <SubTitle>Hotel Name</SubTitle>\n              <Input\n                {...register(\"hotelName\", {\n                  required: \"Hotel Name is required\",\n                  validate: (value) => {\n                    if (value.trim() === \"\") {\n                      return \"Hotel Name cannot be just spaces\";\n                    }\n                    return true;\n                  },\n                })}\n                type=\"text\"\n                defaultValue={userinfo.hotelName}\n                id=\"hotel-name-input\"\n              />\n              {errors.hotelName && (\n                <ErrorText className=\"error-text\">\n                  <span>{errors.hotelName.message.toString()}</span>\n                </ErrorText>\n              )}\n\n              <SubTitle>Street Name</SubTitle>\n              <Input\n                {...register(\"street\", {\n                  required: \"Street Name is required\",\n                  validate: (value) => {\n                    if (value.trim() === \"\") {\n                      return \"Street Name cannot be just spaces\";\n                    }\n                    return true;\n                  },\n                })}\n                type=\"text\"\n                defaultValue={userinfo.street}\n                id=\"street-name-input\"\n              />\n              {errors.street && (\n                <ErrorText className=\"error-text\">\n                  <span>{errors.street.message.toString()}</span>\n                </ErrorText>\n              )}\n\n              <div style={{ display: \"flex\" }}>\n                <div style={{ flex: 1, marginRight: \"10px\" }}>\n                  <SubTitle>City</SubTitle>\n                  <Input\n                    {...register(\"city\", {\n                      required: \"City is required\",\n                      validate: validateLettersWithSpaces,\n                    })}\n                    type=\"text\"\n                    defaultValue={userinfo.city}\n                    id=\"city-input\"\n                  />\n                  {errors.city && (\n                    <ErrorText className=\"error-text\">\n                      <span>{errors.city.message.toString()}</span>\n                    </ErrorText>\n                  )}\n                </div>\n                <div style={{ flex: 1 }}>\n                  <SubTitle>Zip Code</SubTitle>\n                  <Input\n                    {...register(\"zipcode\", {\n                      valueAsNumber: true,\n                      required: \"Zip Code is required\",\n                    })}\n                    type=\"number\"\n                    defaultValue={userinfo.zipcode}\n                    id=\"zip-input\"\n                  />\n                  {errors.zipcode && (\n                    <ErrorText className=\"error-text\">\n                      <span>{errors.zipcode.message.toString()}</span>\n                    </ErrorText>\n                  )}\n                </div>\n              </div>\n\n              <div style={{ display: \"flex\" }}>\n                <div style={{ flex: 1, marginRight: \"10px\" }}>\n                  <SubTitle>State</SubTitle>\n                  <Input\n                    {...register(\"state\", {\n                      required: \"State is required\",\n                      validate: {\n                        validName: (value) => {\n                          if (!isLetter(value)) {\n                            return \"Only letters are allowed\";\n                          }\n                          return true;\n                        },\n                      },\n                    })}\n                    type=\"text\"\n                    defaultValue={userinfo.state}\n                    id=\"state-input\"\n                  />\n                  {errors.state && (\n                    <ErrorText className=\"error-text\">\n                      <span>{errors.state.message.toString()}</span>\n                    </ErrorText>\n                  )}\n                </div>\n                <div style={{ flex: 1 }}>\n                  <SubTitle>Country</SubTitle>\n                  <Input\n                    {...register(\"country\", {\n                      required: \"Country is required\",\n                      validate: {\n                        validName: (value) => {\n                          if (!isLetter(value)) {\n                            return \"Only letters are allowed\";\n                          }\n                          return true;\n                        },\n                      },\n                    })}\n                    type=\"text\"\n                    defaultValue={userinfo.country}\n                    id=\"country-input\"\n                  />\n                  {errors.country && (\n                    <ErrorText className=\"error-text\">\n                      <span>{errors.country.message.toString()}</span>\n                    </ErrorText>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          <br />\n\n          <SectionTitle>Profile Details</SectionTitle>\n\n          <SubTitle>Email</SubTitle>\n          <Input\n            {...register(\"email\", {\n              required: \"Email is required\",\n              pattern: {\n                value: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                message: \"Invalid email format\",\n              },\n            })}\n            type=\"text\"\n            style={{ color: \"black\" }}\n            //onBlur={(e) => validateEmail(e.target.value)}\n            defaultValue={userinfo.email}\n            id=\"email-input\"\n          />\n          {errors.email && (\n            <ErrorText>{errors.email.message.toString()}</ErrorText>\n          )}\n          {serverError.status === 409 && (\n            <ErrorText className=\"error-text\">\n              <span>{serverError.message}</span>\n            </ErrorText>\n          )}\n\n          <div style={{ display: \"flex\" }}>\n            <div style={{ flex: 1, marginRight: \"10px\" }}>\n              <SubTitle>First Name</SubTitle>\n              <Input\n                {...register(\"firstName\", {\n                  required: \"First Name is required\",\n                  validate: {\n                    validName: (value) => {\n                      if (!isLetter(value)) {\n                        return \"Only letters are allowed\";\n                      }\n                      return true;\n                    },\n                  },\n                })}\n                type=\"text\"\n                defaultValue={userinfo.firstName}\n                id=\"fname-input\"\n              />\n              {errors.firstName && (\n                <ErrorText>{errors.firstName.message.toString()}</ErrorText>\n              )}\n            </div>\n            <div style={{ flex: 1 }}>\n              <SubTitle>Last Name</SubTitle>\n              <Input\n                {...register(\"lastName\", {\n                  required: \"Last Name is required\",\n                  validate: {\n                    validName: (value) => {\n                      if (!isLetter(value)) {\n                        return \"Only letters are allowed\";\n                      }\n                      return true;\n                    },\n                  },\n                })}\n                type=\"text\"\n                defaultValue={userinfo.lastName}\n                id=\"lname-input\"\n              />\n              {errors.lastName && (\n                <ErrorText>{errors.lastName.message.toString()}</ErrorText>\n              )}\n            </div>\n          </div>\n\n          <SubTitle>Password</SubTitle>\n          <Input {...register(\"password\", {})} type=\"password\" id=\"passw\" />\n\n          <SubTitle>Phone Number</SubTitle>\n          <Input\n            {...register(\"phoneNumber\", {\n              required: \"Phone Number is required\",\n              validate: isValidPhoneNumber,\n            })}\n            type=\"text\"\n            defaultValue={userinfo.phone}\n            id=\"phone-input\"\n          />\n          {errors.phoneNumber && (\n            <ErrorText>{errors.phoneNumber.message.toString()}</ErrorText>\n          )}\n          {serverError.status === 418 && (\n            <ErrorText className=\"error-text\">\n              <span>{serverError.message}</span>\n            </ErrorText>\n          )}\n\n          <CenteredButtonContainer>\n            <SubmitButton type=\"submit\" id=\"update-btn\">\n              {isFetching ? <Ellipsis color=\"white\" size={30} /> : \"Update\"}\n            </SubmitButton>\n          </CenteredButtonContainer>\n        </form>\n      </Container>\n    </>\n  );\n}\n\nexport default AccountMod;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}